\edef\emuatcatcode{\the\catcode`\@}
\catcode`\@=11
% emu-luatexbase.sty v 0.01 2015/07/14
% minimal luatexbase emulation, for testing with
% current luaotfload package
%
% Prevent luatex/luatexbase loading when it is referenced
\expandafter\def\csname luatexbase@sty@endinput\endcsname{}
\expandafter\def\csname ver@luatexbase.sty\endcsname{}
\expandafter\def\csname ver@luatexbase-modutils.sty\endcsname{}
\expandafter\def\csname ver@luatexbase-mcb.sty\endcsname{}
\expandafter\def\csname ver@luatexbase-attr.sty\endcsname{}
\expandafter\def\csname ver@luatex.sty\endcsname{}
%

\ifx\e@alloc\@undefined
% In pre 2014 latex, or plain TeX load etex.{sty,src}
  \ifx\documentclass\@undefined
    \input{etex.src}
    \catcode`\@=11
  \else
    \RequirePackage{etex}
  \fi
  \input{ltluatex.tex}
\else
  \ifx\catcodetable@initex\@undefined
% in 2015/01/01 latex load ltluatex.sty
  \input{ltluatex.sty}
  \else
% we are done
  \fi
\fi

% restetex.src 
% Simple require wrapper so that luaotfload does get loaded.
\def\RequireLuaModule#1{\directlua{require("#1")}}





% extended catcode table support
\let\CatcodeTableIniTeX\catcodetable@initex
\let\CatcodeTableString\catcodetable@string
\let\CatcodeTableLaTeX\catcodetable@latex
\let\CatcodeTableLaTeXAtLetter\catcodetable@atletter

\newcatcodetable\CatcodeTableOther
\setcatcodetable\CatcodeTableOther{%
  \catcodetable\CatcodeTableString
  \catcode32 12 }

\newcatcodetable\CatcodeTableExpl
\setcatcodetable\CatcodeTableExpl{%
\catcodetable\CatcodeTableLaTeX
  \catcode126 10 % tilde is a space char
  \catcode32  9  % space is ignored
  \catcode9   9  % tab also ignored
  \catcode95  11 % underscore letter
  \catcode58  11 % colon letter
  }


% Top level access to catcodetable stack
\def\BeginCatcodeRegime#1{%
\pushcatcodes
\catcodetable#1\relax}

\def\EndCatcodeRegime{%
\popcatcodes
}

% The implementation of the stack is completely
% different, but usage should match.
\let\PushCatcodeTableNumStack\pushcatcodes
\let\PopCatcodeTableNumStack\popcatcodes


\directlua{
% probably this shouldn't be allowed on primitive callbacks
% but this version allows otfload to run.
function luatexbase.reset_callback(a)
luatexbase.disable_callback(a)
end
%
% fontspec uses a latex-package catcode table
% this is called catcodetable@atletter in ltluatex.
% We also need to emulate the catcodetables table.
luatexbase.catcodetables=setmetatable(
{
['latex-package'] = luatexbase.registernumber("catcodetable@atletter"),
ini    = \number\CatcodeTableIniTeX,%luatexbase.registernumber("catcodetable@initex"),
string = \number\CatcodeTableString,%luatexbase.registernumber("catcodetable@string"),
other  = \number\CatcodeTableOther,%luatexbase.registernumber("CatcodeTableOther"),
latex  = luatexbase.registernumber("catcodetable@latex"),
expl   = luatexbase.registernumber("CatcodeTableExpl"),
expl3  = luatexbase.registernumber("CatcodeTableExpl")
},{
__index = function(t,key)
return luatexbase.registernumber(key) or nil
end}
)
}

% on old luatex workaround hashtable issues.

\ifnum\luatexversion<80 %
\def\newcatcodetable#1{%
  \e@alloc\catcodetable\chardef
    \e@alloc@ccodetable@count\m@ne{"8000}#1%
  \initcatcodetable\allocationnumber
  {\escapechar=\m@ne
  \directlua{luatexbase.catcodetables['\string#1']=%
    \the\allocationnumber}}%
}
\fi

\directlua{
% priority_in_callback usually used as a boolean test
% eg polyglossia-frpt.lua rather than needing the priority.
% this covers that usage (only).
luatexbase.priority_in_callback = luatexbase.added_to_callback
%
%
% ltluatex provides_module does not return print functions
% so define modified version here.
luatexbase.base_provides_module=luatexbase.provides_module
function luatexbase.provides_module(info)
  luatexbase.base_provides_module(info)
  return
    function(s) return luatexbase.module_error(info.name, s) end,
    function(s) return luatexbase.module_warning(info.name, s) end,
    function(s) return luatexbase.module_info(info.name, s) end,
    function(s) return luatexbase.module_info(info.name, s) end
end
}


% same for attribute table as catcode
\ifnum\luatexversion<80 %
\def\attribute#1{%
  \e@alloc\attribute\attributedef
    \e@alloc@attribute@count\m@ne\e@alloc@top#1%
  {\escapechar=\m@ne
  \directlua{luatexbase.attributes['\string#1']=%
    \the\allocationnumber}}%
}
\fi

% resolve name clashes...
\let\newluatexattribute\newattribute
\let\newluatexcatcodetable\newcatcodetable
\let\setluatexcatcodetable\setcatcodetable


\catcode`\@=\emuatcatcode\relax